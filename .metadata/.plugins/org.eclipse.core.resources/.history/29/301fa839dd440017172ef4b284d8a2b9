import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.event.MouseInputAdapter;
import javax.swing.event.MouseInputListener;

public class DrawLine extends JPanel {
	
    JFrame frame = new JFrame();
    int t = 111;

    public DrawLine() { // constructor
        frame.setContentPane(this);
        setLayout(new GridLayout(t, t, 3, 3));
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
//      g.setColor(getBackground());
//      g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(Color.BLACK);
        for (int i = 0; i <= t; i++) {
            if (i % 3 == 0) {
                int coordx = getWidth() * i / t;
                int coordy = getHeight() * i / t;
                g.drawLine(coordx, 0, coordx, getHeight());
                g.drawLine(0, coordy, getWidth(), coordy);

            }
        }
    }
    
	public static void main(String[] args) {
		new DrawLine();
	}

    public class MyListener extends MouseInputAdapter  implements MouseMotionListener{
    
    Rectangle currentRect = null;
    Graphics g;
    	
    public void mousePressed(MouseEvent e) {
            int x = e.getX();
            int y = e.getY();
           // currentRect = new Rectangle(x, y, 5, 5);
            g.drawRect(x, y, 5, 5);
            repaint();
    }
	
    @Override
	public void mouseDragged(MouseEvent e) {
		updateSize(e);
	}


	@Override
	public void mouseMoved(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
    
	void updateSize(MouseEvent e) {
        int x = e.getX();
        int y = e.getY();  
        g.setColor(Color.BLACK);
        g.drawRect(x, y, 5, 5);
        repaint();
	}
	
    }
}