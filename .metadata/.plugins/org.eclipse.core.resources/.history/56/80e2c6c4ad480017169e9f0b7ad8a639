import java.awt.Color;
import java.awt.Graphics;

public class Bresenham extends MyShape {

	public Bresenham() {
		super();
	}

	public Bresenham(int x1, int y1, int x2, int y2, Color color) {
		super(x1, y1, x2, y2, color);
	}

	@Override
	public void draw(Graphics g) {
	
		if ((x1 == x2) && (y1 == y2)) {   
			g.fillRect((int) Math.round(x1 / 10.0) * 10, (int) Math.round(y1 / 10.0) * 10, 10, 10);
		} else {              
		    int dx = Math.abs(x2 - x1);
		    int dy = Math.abs(y2 - y1);
		    int rozdil = dx - dy;

		    int posun_x, posun_y;

		    if (x1 < x2) posun_x = 1; else posun_x = -1;
		    if (y1 < y2) posun_y = 1; else posun_y = -1;

		    while ((x1 != x2) || (y1 != y2)) {  

		        int p = 2 * rozdil;

		        if (p > -dy) {
		            rozdil = rozdil - dy;
		            x1 = x1 + posun_x;
		        }
		        if (p < dx) {
		            rozdil = rozdil + dx;
		            y1 = y1 + posun_y;
		        }
		        g.fillRect((int) Math.round(x1 / 10.0) * 10, (int) Math.round(y1 / 10.0) * 10, 10, 10);
		    }
		} 

/*		dy = Math.abs(y2 - y1);
		dx = Math.abs(x2 - x1);
		e = dx - dy;

		if(x1 < x2) x = 1;
		else x = -1;
		
		if(y1 < y2) y = 1;
		else y = -1;
		
			
		while ((x1 != x2) && (y1 != y2)){
			int p = 2*e;
			
			if (p > -dy){
				e -= dy;
				x1 += x;				
			}
			if (p < dx){
				e += dx;
				y1 += y;
			}
			g.fillRect((int) Math.round(x1 / 10.0) * 10, (int) Math.round(y1 / 10.0) * 10, 10, 10);
		}
*/
	}
}
